From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Peter=20G=C3=BCttinger?= <njol@gmx.ch>
Date: Wed, 1 Jun 2022 08:16:40 +0200
Subject: [PATCH] Monumenta - Mob behavior changes

- Drowned no longer convert naturally
- Charged creepers no longer cause mob head drops
- Skeletons can only shoot bows from main hand
- Remove wither nether star drop
- Giant AI
- Increase Giant view distance
- Endermen holding items are no longer always persistent
- Endermen can be hurt by projectiles if their teleportation is cancelled
- Closed Shulkers can be hurt by arrows
- Withers can be hurt by arrows even below half health

diff --git a/src/main/java/net/minecraft/world/entity/animal/Animal.java b/src/main/java/net/minecraft/world/entity/animal/Animal.java
index 3c4d142e982c34a23bdb5da1f51c8dcacc0532c1..4c302f9387faf6e5ec7dc21ae711e0c4123ba3f2 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Animal.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Animal.java
@@ -89,10 +89,11 @@ public abstract class Animal extends AgeableMob {
     }
     // CraftBukkit end */
 
-    @Override
-    public float getWalkTargetValue(BlockPos pos, LevelReader world) {
-        return world.getBlockState(pos.below()).is(Blocks.GRASS_BLOCK) ? 10.0F : world.getPathfindingCostFromLightLevels(pos);
-    }
+    // Monumenta - don't override for grass/light, use super value
+    // @Override
+    // public float getWalkTargetValue(BlockPos pos, LevelReader world) {
+    //     return world.getBlockState(pos.below()).is(Blocks.GRASS_BLOCK) ? 10.0F : world.getPathfindingCostFromLightLevels(pos);
+    // }
 
     @Override
     public void addAdditionalSaveData(CompoundTag nbt) {
diff --git a/src/main/java/net/minecraft/world/entity/boss/wither/WitherBoss.java b/src/main/java/net/minecraft/world/entity/boss/wither/WitherBoss.java
index e81e8f050bd9df34b6a64c741428503b434f03a3..f6781278016c2054622a2b90faf2dd30ff90a411 100644
--- a/src/main/java/net/minecraft/world/entity/boss/wither/WitherBoss.java
+++ b/src/main/java/net/minecraft/world/entity/boss/wither/WitherBoss.java
@@ -503,12 +503,13 @@ public class WitherBoss extends Monster implements PowerableMob, RangedAttackMob
             } else {
                 Entity entity;
 
-                if (this.isPowered()) {
-                    entity = source.getDirectEntity();
-                    if (entity instanceof AbstractArrow) {
-                        return false;
-                    }
-                }
+                // Monumenta - no longer immune to projectiles below half health
+                // if (this.isPowered()) {
+                //     entity = source.getDirectEntity();
+                //     if (entity instanceof AbstractArrow) {
+                //         return false;
+                //     }
+                // }
 
                 entity = source.getEntity();
                 if (entity != null && !(entity instanceof Player) && entity instanceof LivingEntity && ((LivingEntity) entity).getMobType() == this.getMobType()) {
@@ -530,16 +531,17 @@ public class WitherBoss extends Monster implements PowerableMob, RangedAttackMob
         }
     }
 
-    @Override
-    protected void dropCustomDeathLoot(DamageSource source, int lootingMultiplier, boolean allowDrops) {
-        super.dropCustomDeathLoot(source, lootingMultiplier, allowDrops);
-        ItemEntity entityitem = this.spawnAtLocation((ItemLike) Items.NETHER_STAR);
-
-        if (entityitem != null) {
-            entityitem.setExtendedLifetime();
-        }
-
-    }
+    // Monumenta - don't drop nether stars
+//    @Override
+//    protected void dropCustomDeathLoot(DamageSource source, int lootingMultiplier, boolean allowDrops) {
+//        super.dropCustomDeathLoot(source, lootingMultiplier, allowDrops);
+//        ItemEntity entityitem = this.spawnAtLocation((ItemLike) Items.NETHER_STAR);
+//
+//        if (entityitem != null) {
+//            entityitem.setExtendedLifetime();
+//        }
+//
+//    }
 
     @Override
     public void checkDespawn() {
diff --git a/src/main/java/net/minecraft/world/entity/monster/Creeper.java b/src/main/java/net/minecraft/world/entity/monster/Creeper.java
index 29c62525241e2e03686d1bceee740d4f54f33c54..b5e925f8920b6a2e655a59f8f7238e840f446784 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Creeper.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Creeper.java
@@ -328,7 +328,7 @@ public class Creeper extends Monster implements PowerableMob {
     }
 
     public boolean canDropMobsSkull() {
-        return this.isPowered() && this.droppedSkulls < 1;
+        return false; // MONUMENTA - don't drop mob skulls
     }
 
     public void increaseDroppedSkulls() {
diff --git a/src/main/java/net/minecraft/world/entity/monster/EnderMan.java b/src/main/java/net/minecraft/world/entity/monster/EnderMan.java
index 418d6301f067803e2471e59ac2d52a68cbff249b..f3864d0975f55cfd1a43f098f95ee2973bf10af7 100644
--- a/src/main/java/net/minecraft/world/entity/monster/EnderMan.java
+++ b/src/main/java/net/minecraft/world/entity/monster/EnderMan.java
@@ -418,9 +418,10 @@ public class EnderMan extends Monster implements NeutralMob {
                         return true;
                     }
                 }
+                return flag1; // Monumenta: allow Endermen to be hurt by projectiles if their teleportation is cancelled
                 } // Paper end
 
-                return flag1;
+                return flag1 || super.hurt(source, amount); // Monumenta: allow Endermen to be hurt by projectiles if their teleportation is cancelled
             }
         }
     }
@@ -458,7 +459,7 @@ public class EnderMan extends Monster implements NeutralMob {
 
     @Override
     public boolean requiresCustomPersistence() {
-        return super.requiresCustomPersistence() || this.getCarriedBlock() != null;
+        return super.requiresCustomPersistence(); // MONUMENTA - ignore carrying item
     }
 
     private static class EndermanFreezeWhenLookedAt extends Goal {
diff --git a/src/main/java/net/minecraft/world/entity/monster/Giant.java b/src/main/java/net/minecraft/world/entity/monster/Giant.java
index 41004c28edb748e12c4f868aa07b4672891197c1..14a69d84f2b41d97359e36a3cdb64d83998cf1d3 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Giant.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Giant.java
@@ -8,6 +8,12 @@ import net.minecraft.world.entity.ai.attributes.AttributeSupplier;
 import net.minecraft.world.entity.ai.attributes.Attributes;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.LevelReader;
+import net.minecraft.sounds.SoundEvent;
+import net.minecraft.sounds.SoundEvents;
+import net.minecraft.world.damagesource.DamageSource;
+import net.minecraft.world.entity.MobType;
+import net.minecraft.world.entity.player.Player;
+import net.minecraft.world.level.block.state.BlockState;
 
 public class Giant extends Monster {
     public Giant(EntityType<? extends Giant> type, Level world) {
@@ -27,4 +33,46 @@ public class Giant extends Monster {
     public float getWalkTargetValue(BlockPos pos, LevelReader world) {
         return world.getPathfindingCostFromLightLevels(pos);
     }
+
+    /* Monumenta Start - Add Giant AI */
+    @Override
+    protected void registerGoals() {
+        this.goalSelector.addGoal(8, new net.minecraft.world.entity.ai.goal.LookAtPlayerGoal(this, Player.class, 8.0F));
+        this.goalSelector.addGoal(8, new net.minecraft.world.entity.ai.goal.RandomLookAroundGoal(this));
+        this.goalSelector.addGoal(7, new net.minecraft.world.entity.ai.goal.WaterAvoidingRandomStrollGoal(this, 1.0D));
+        this.goalSelector.addGoal(2, new net.minecraft.world.entity.ai.goal.MeleeAttackGoal(this, 1.0D, false));
+
+        this.targetSelector.addGoal(2, new net.minecraft.world.entity.ai.goal.target.HurtByTargetGoal(this, new Class[0]));
+        this.targetSelector.addGoal(2, new net.minecraft.world.entity.ai.goal.target.NearestAttackableTargetGoal<>(this, Player.class, true));
+    }
+
+    @Override
+    protected SoundEvent getAmbientSound() {
+        return SoundEvents.ZOMBIE_AMBIENT;
+    }
+
+    @Override
+    protected SoundEvent getHurtSound(DamageSource source) {
+        return SoundEvents.ZOMBIE_HURT;
+    }
+
+    @Override
+    public SoundEvent getDeathSound() {
+        return SoundEvents.ZOMBIE_DEATH;
+    }
+
+    protected SoundEvent getStepSound() {
+        return SoundEvents.ZOMBIE_STEP;
+    }
+
+    @Override
+    protected void playStepSound(BlockPos pos, BlockState state) {
+        this.playSound(this.getStepSound(), 0.15F, 0.3F);
+    }
+
+    @Override
+    public MobType getMobType() {
+        return MobType.UNDEAD;
+    }
+    /* Monumenta End */
 }
diff --git a/src/main/java/net/minecraft/world/entity/monster/Shulker.java b/src/main/java/net/minecraft/world/entity/monster/Shulker.java
index 542babb33b9f79d15bd63d2c364f59b239e59c26..14fd5fadfec32ac8a69cec16f4e0d5b581fba170 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Shulker.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Shulker.java
@@ -461,12 +461,13 @@ public class Shulker extends AbstractGolem implements VariantHolder<Optional<Dye
     public boolean hurt(DamageSource source, float amount) {
         Entity entity;
 
-        if (this.isClosed()) {
-            entity = source.getDirectEntity();
-            if (entity instanceof AbstractArrow) {
-                return false;
-            }
-        }
+		// Monumenta: allow closed Shulkers to be hurt by arrows
+        // if (this.isClosed()) {
+        //     entity = source.getDirectEntity();
+        //     if (entity instanceof AbstractArrow) {
+        //         return false;
+        //     }
+        // }
 
         if (!super.hurt(source, amount)) {
             return false;
diff --git a/src/main/java/net/minecraft/world/entity/monster/Zombie.java b/src/main/java/net/minecraft/world/entity/monster/Zombie.java
index 9976205537cfe228735687f1e9c52c74ac025690..0ec96df43062a33958aca6845ca8cfdb0902a696 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Zombie.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Zombie.java
@@ -227,9 +227,10 @@ public class Zombie extends Monster {
             } else if (this.convertsInWater()) {
                 if (this.isEyeInFluid(FluidTags.WATER)) {
                     ++this.inWaterTime;
-                    if (this.inWaterTime >= 600) {
-                        this.startUnderWaterConversion(300);
-                    }
+                    // Monumenta - disable drowned conversion
+                    // if (this.inWaterTime >= 600) {
+                    //     this.startUnderWaterConversion(300);
+                    // }
                 } else {
                     this.inWaterTime = -1;
                 }
diff --git a/src/main/java/net/minecraft/world/entity/projectile/ProjectileUtil.java b/src/main/java/net/minecraft/world/entity/projectile/ProjectileUtil.java
index 0524161f7cb414d526e6118258bddd989be6cc9a..97723bd0168eb9592430d778b44899f87e15ffde 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/ProjectileUtil.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/ProjectileUtil.java
@@ -128,6 +128,7 @@ public final class ProjectileUtil {
     }
 
     public static InteractionHand getWeaponHoldingHand(LivingEntity entity, Item item) {
+        if (Items.BOW == item) return InteractionHand.MAIN_HAND; // MONUMENTA - Only allow mobs to use bows from mainhand
         return entity.getMainHandItem().is(item) ? InteractionHand.MAIN_HAND : InteractionHand.OFF_HAND;
     }
 
diff --git a/src/main/java/org/spigotmc/TrackingRange.java b/src/main/java/org/spigotmc/TrackingRange.java
index 6ac5de214d0da921d0d0c822e7063f6738788cac..462d92ff6d50b1d587ead8f640004055628b5fe8 100644
--- a/src/main/java/org/spigotmc/TrackingRange.java
+++ b/src/main/java/org/spigotmc/TrackingRange.java
@@ -26,6 +26,7 @@ public class TrackingRange
             return defaultRange;
         }
         if (entity instanceof net.minecraft.world.entity.boss.enderdragon.EnderDragon) return defaultRange; // Paper - enderdragon is exempt
+        if (entity instanceof net.minecraft.world.entity.monster.Giant) return 96; // Monumenta - Giants are visible from further away
         SpigotWorldConfig config = entity.level.spigotConfig;
         if ( entity instanceof ServerPlayer )
         {
