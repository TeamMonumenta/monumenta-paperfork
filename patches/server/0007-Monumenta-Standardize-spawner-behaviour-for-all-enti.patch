From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Timothy Southwick <NickNackGus@gmail.com>
Date: Sat, 10 Jul 2021 20:08:03 -0400
Subject: [PATCH] Monumenta - Standardize spawner behaviour for all entity
 types


diff --git a/src/main/java/net/minecraft/world/level/BaseSpawner.java b/src/main/java/net/minecraft/world/level/BaseSpawner.java
index 4bfebbb2e87464cd47a38a5da6275b2c662fa052..6f88df36b9964ea594dd088b21a5e9704928c1b5 100644
--- a/src/main/java/net/minecraft/world/level/BaseSpawner.java
+++ b/src/main/java/net/minecraft/world/level/BaseSpawner.java
@@ -119,7 +119,7 @@ public abstract class BaseSpawner {
                             if (!mobspawnerdata_a.blockLightLimit().isValueInRange(world.getBrightness(LightLayer.BLOCK, blockposition1)) || !mobspawnerdata_a.skyLightLimit().isValueInRange(world.getBrightness(LightLayer.SKY, blockposition1))) {
                                 continue;
                             }
-                        } else if (!SpawnPlacements.checkSpawnRules((EntityType) optional.get(), world, MobSpawnType.SPAWNER, blockposition1, world.getRandom())) {
+                        } else if (world.getDifficulty() == net.minecraft.world.Difficulty.PEACEFUL) { // Monumenta - no spawning in peaceful, and no mob-specific spawn checks
                             continue;
                         }
                         // Paper start
@@ -135,8 +135,8 @@ public abstract class BaseSpawner {
                                 net.minecraft.server.MCUtil.toLocation(world, pos)
                             );
                             if (!event.callEvent()) {
-                                flag = true;
                                 if (event.shouldAbortSpawn()) {
+                                    flag = true; // Monumenta - don't delay the spawner if the event is cancelled, except if shouldAbortSpawn is set
                                     break;
                                 }
                                 continue;
@@ -166,7 +166,7 @@ public abstract class BaseSpawner {
                         if (entity instanceof Mob) {
                             Mob entityinsentient = (Mob) entity;
 
-                            if (this.nextSpawnData.getCustomSpawnRules().isEmpty() && !entityinsentient.checkSpawnRules(world, MobSpawnType.SPAWNER) || !entityinsentient.checkSpawnObstruction(world)) {
+                            if (this.nextSpawnData.getCustomSpawnRules().isEmpty() && !world.isUnobstructed(entityinsentient)) { // Monumenta - no mob-specific spawn checks
                                 continue;
                             }
 
